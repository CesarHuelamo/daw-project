!function(e){var o={};function r(s){if(o[s])return o[s].exports;var t=o[s]={i:s,l:!1,exports:{}};return e[s].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.m=e,r.c=o,r.d=function(e,o,s){r.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:s})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(o,"a",o),o},r.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},r.p="",r(r.s=17)}([function(e,o){e.exports=require("react")},function(e,o){e.exports=require("react-router-dom")},function(e,o){e.exports=require("axios")},function(e,o){e.exports=require("mongoose")},function(e,o){e.exports=require("validator")},function(e,o){e.exports=require("react-dom/server")},function(e,o,r){"use strict";r(1),r(5),r(0),r(2)},function(e,o){e.exports=require("crypto-js/sha256")},function(e,o){e.exports=require("jsonwebtoken")},function(e,o,r){const s=r(3);r(4);var t=new s.Schema({question:{type:String,required:!0},answer:{type:String,required:!0},eval:{type:Array,required:!0}});let n=s.model("Question",t);e.exports={Question:n}},function(e,o,r){const s=r(3),t=r(4);var n=new s.Schema({email:{type:String,required:!0,unique:!0,trim:!0,minlength:1,validate:{validator:t.isEmail,message:"{VALUE} is not a valid email"}},nick:{type:String,require:!0,unique:!0,trim:!0,minLength:1},password:{type:String,required:!0,minLength:8},token:{type:String,required:!0,unique:!0}});let i=s.model("User",n);e.exports={User:i}},function(e,o,r){"use strict";const s=r(3);s.Promise=global.Promise,s.connect("mongodb://localhost:27017/Javasquizz"),e.exports={mongoose:s}},function(e,o){e.exports=require("lodash")},function(e,o){e.exports=require("socket.io")},function(e,o){e.exports=require("express")},function(e,o){e.exports=require("http")},function(e,o){e.exports=require("path")},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(6);const path=__webpack_require__(16),http=__webpack_require__(15),express=__webpack_require__(14),socketIO=__webpack_require__(13),_=__webpack_require__(12),{mongoose:mongoose}=__webpack_require__(11),{User:User}=__webpack_require__(10),{Question:Question}=__webpack_require__(9),jwt=__webpack_require__(8),SHA256=__webpack_require__(7),publicPath=path.join(__dirname,"/../public");let app=express(),server=http.createServer(app),io=socketIO(server);app.use(express.static(publicPath)),app.set("view engine","html"),app.use(express.urlencoded({extended:!0})),app.use(express.json());const port=process.env.PORT||8080;let users={};const questions=[{question:"typeof 12",answer:"number",eval:[!1]},{question:'typeof "hola"',answer:"string",eval:[!1]},{question:"Rellena el hueco con la funci√≥n adecuada: <br/>[2,3]._______.((v,i,a) => {return v+2;}); <br/> resultado: [4,5]",answer:"[4,5]",eval:[!0,"[2,3].","((v) => {return v+2});"]},{question:"typeof [12]",answer:"object",eval:[!1]}],colors=["yellow","green","lightred","lightblue","black","white","orange"];let color,userColors={},rooms={},room,user;function tenRandomNumbers(){let e=[];for(;e.length<10;){let o=Math.round(20*Math.random());-1==e.indexOf(o)&&e.push(o)}return e}function newQuestion(e){console.log(rooms[e].users,rooms[e].timer),clearInterval(rooms[e].interval),clearTimeout(rooms[e].timeout),rooms[e].timer=60,io.sockets.in(e).emit("timer",rooms[e].timer),rooms[e].interval=setInterval(()=>{rooms[e].timer<=0||rooms[e].timer--},1e3),rooms[e].timeout=setTimeout(()=>{newQuestion(e)},63e3),rooms[e].responses=0,0==rooms[e].questions.length?final(e):(rooms[e].currentQuestion=rooms[e].questions.splice(0,1)[0],io.sockets.in(e).emit("question",rooms[e].currentQuestion))}function final(e){rooms[e].start="finished",rooms[e].questions=questions.slice(),rooms[e].timer=60,io.sockets.in(e).emit("final",{timer:rooms[e].timer,score:rooms[e].users}),clearInterval(rooms[e].interval),rooms[e].interval=setInterval(()=>{rooms[e].timer<=0||rooms[e].timer--},1e3),rooms[e].timeout=setTimeout(()=>{Object.keys(rooms[e].users).forEach(o=>{rooms[e].users[o]=0}),newQuestion(e),rooms[e].start=!0},6e4)}app.post("/session",(e,o)=>{User.findOne({token:e.body.token}).then(e=>{o.send({nick:e.nick})}).catch(()=>{o.send(!1)})}),app.get("*",(e,o)=>{o.redirect("/"),o.end()}),app.post("/users",(e,o)=>{let r=_.pick(e.body,["email","password","nick"]);r.password=SHA256(r.password+"layla"),r.token=jwt.sign(r,"layla").toString(),new User(r).save().then(()=>{e.session=r.nick,o.send("/join-room")}).catch(e=>{o.status(400).send(e)})}),app.post("/login",(e,o)=>{let r=_.pick(e.body,["email","password"]);r.password=SHA256(r.password+"layla").toString(),User.findOne(r).then(e=>{e?o.send({nick:e.nick,token:e.token}):o.end()}).catch(e=>console.log(e))}),app.post("/rooms",(e,o)=>{if(room=e.body.room,user=e.session.user,!rooms[room]){rooms[e.body.room]={start:!1,users:{},timer:60,responses:0,questions:[],currentQuestion:null,interval:null,timeout:null};let o=[3,2,1];Question.find().then(e=>{o.forEach(o=>{console.log(e[o]),rooms[room].questions.push(e[o])})})}for(let o=0;o<10;o++)rooms[room].users[user]>-1&&(console.log(user),user=`${e.body.user}(${o})`);Object.keys(rooms[room].users).length<10?(rooms[room].users[user]=0,o.sendFile(publicPath+"/room.html")):o.sendFile(publicPath+"/sala-llena.html"),color=colors[Math.floor(7*Math.random())],userColors[user]=color}),io.on("connection",socket=>{socket.join(room),socket.emit("start",{room:room,user:user,users:Object.keys(rooms[room].users),userColors:userColors}),io.sockets.in(room).emit("newPlayer",{user:user,color:color}),rooms[room].start?"finished"===rooms[room].start?socket.emit("final",{timer:rooms[room].timer,score:rooms[room].users}):(socket.emit("question",rooms[room].currentQuestion),socket.emit("timer",rooms[room].timer)):(rooms[room].interval=setInterval(()=>{rooms[room].timer--},1e3),io.sockets.in(room).emit("starting",rooms[room].timer),newQuestion(room),rooms[room].start=!0),console.log("New user connected"),socket.on("response",data=>{let answer=data.body,currentRoom=rooms[data.room];if(currentRoom.currentQuestion.eval[0])try{answer=JSON.stringify(eval(currentRoom.currentQuestion.eval[1]+answer+currentRoom.currentQuestion.eval[2]))}catch(e){answer=null}if(answer==currentRoom.currentQuestion.answer){if(data.responded)return;currentRoom.users[data.user]+=currentRoom.timer,currentRoom.responses++,io.sockets.in(data.room).emit("correct",{user:data.user,questionScore:currentRoom.timer,totalScore:currentRoom.users[data.user]})}else io.sockets.in(data.room).emit("newMessage",{user:data.user,body:data.body});currentRoom.responses==Object.keys(currentRoom.users).length&&newQuestion(data.room)}),socket.on("createMessage",e=>{io.sockets.in(e.room).emit("newMessage",{user:e.user,body:e.body})}),socket.on("exit",e=>{delete rooms[e.room].users[e.user],console.log(rooms),0===Object.keys(rooms[e.room].users).length&&(clearInterval(rooms[e.room].interval),clearTimeout(rooms[e.room].timeout),delete rooms[e.room]),io.sockets.in(e.room).emit("playerExit",e.user),console.log(rooms)})}),server.listen(port,()=>{console.log("server up in port "+port)})}]);